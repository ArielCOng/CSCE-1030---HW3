/*
Name: Ariel Ong (arielong@my.unt.edu)
Professor Shrestha
Date:  10 - 25 - 2020
Description:This program will give you outputs based on the menu number you choose. If you choose "GREETING," it will access your time of day and use it to write a greeting. If you choose "WEATHER," the computer will output a random temperature in fahrenheit and whether it will be sunny or rainy. If you choose "GAME," the computer will play a guess game with you, where the chosen number is randomly generated by the computer. If you choose "EXIT," you will exit the program.
Parameters: Username, numbers guessed
Return: greeting, temperature, weather, number computer chose
*/

#include <iostream>
#include <string>
#include <time.h>
#include <ctime>
#include <cstdlib>
using namespace std;

const int MAX_LENGTH = 15; //global constats
int temp[13][MAX_LENGTH];

int getCurrentHours_OR_Month(bool hours); //declaring functions
void fixName(string& username); 
void setTemp(int array[13][MAX_LENGTH], int monthNum);
void dispWeather();
void dispGreeting(string username);
void playGame(); 

int main() {

        cout << "   Computer Science and Engineering" << endl << endl;          //Output heading
        cout << "    CSCE 1030 - Computer Science I" << endl << endl;
        cout << "Ariel Ong  aco0078 arielong@my.unt.edu" << endl << endl;


        string username;                       //declaring username as string; username is variable name for user's full name

        cout << "Please enter your full name: ";                                 //Prompting for user's full name
        getline (cin, username);

        int menuChoice = 0;

        enum MenuService {GREETING = 1, WEATHER = 2, GAME = 3, EXIT = 4 };

        do
        {
        cout << endl;
        cout << "Personal Concierge App: Choose a Service:" << endl;                    //this block of code will display the menu
        cout << "       1. Display Personal Greeting"<< endl;
        cout << "       2. Display Today's Weather Status"<< endl;
        cout << "       3. Play a Guessing Game"<< endl;
        cout << "       4. Exit"<< endl;

        cout << endl;                                           //endl for aesthetic reasons
        cout << "Enter service number wanted: ";                //prompting for service number wanted
        cin >> menuChoice;                                      // prompting for menu choice
        cout << endl;   

	static_cast <MenuService>(menuChoice);                  //in order to use menuChoice for switch statement

        switch (menuChoice) {                                   //switch statement for the menu

                case GREETING:                                  //When user types "1"
                        {     

                	dispGreeting(username);        

                        }
                        break;

                case WEATHER:                 //When user types "2"
      			{
        			dispWeather(); 
                        }
                        break;

                case GAME:                                       //When user types "3"
                        {
				playGame();
                        }
                        break;
                case EXIT:                                                            //if user input is "4"
                        cout << "You are now exiting the program, bye-bye! Have a nice day!" << endl << endl;  //Goodbye to user
                        break;

                default:
                        cout << "Error, enter another integer in between 1 - 4: ";              //will take you back to the menu if wrong integer is entered
                        cin >> menuChoice;
                        break;

                        }
        } while (menuChoice != 4);                      //will escape the program
	
        return 0;
	}
/* Function: getCurrentHours_OR_Month
 *
 * Parameters: hours (boolean)
 *
 * Return: returns integer (month or hour, depends on boolean)
 *
 * Description: This function returns either an integer for hour or month depending on the boolean. It looks at the time user input the username and looks at which function the user wants which is called by other functions. It can return either hour or month. 

 */

	int getCurrentHours_OR_Month(bool hours)
	{
		time_t rawtime;
		string time_str;
                rawtime = time(&rawtime);
                time_str = ctime(&rawtime);
                int time_hour;  		//after parsing time_str for hour, store as integer so it can be used later
		int month;

                cout << time_str << endl;
		
		string specificHour = time_str.substr(11,2);
		string specificMonth = time_str.substr(3,4);
		
             	time_hour = (stoi(specificHour));        //parsing the time_str for hour
	
		if ( hours == true)
		{
			return time_hour; //returns parsed string
		}
		else
		{
			int monthNum; //if statements to determine month
			if (specificMonth == "Jan")
			{
				monthNum = 1;
			}	
			else if (specificMonth == "Feb")
                        {
                                monthNum = 2;
                        }
			 else if (specificMonth == "Mar")
                        {
                                monthNum = 3;
                        }
                        else if (specificMonth == "Apr")
                        {
                                monthNum = 4;
                        }
			 else if (specificMonth == "May")
                        {
                                monthNum = 5;
                        }
                        else if (specificMonth == "Jun")
                        {
                                monthNum = 6;
                        }
			 else if (specificMonth == "Jul")
                        {
                                monthNum = 7;
                        }
                        else if (specificMonth == "Aug")
                        {
                                monthNum = 8;
                        }
			 else if (specificMonth == "Sep")
                        {
                                monthNum = 9;
                        }
                        else if (specificMonth == "Oct")
                        {
                                monthNum = 10;
                        }
			 else if (specificMonth == "Nov")
                        {
                                monthNum = 11;
                        }
                        else if (specificMonth == "Dec")
                        {
                                monthNum = 12;
                        }

		
			return monthNum; 
		}
	}
	/* Function: fixName
 *
 * Parameters: username 
 *
 * Return: none
 *
 * Description: This function correctly puntuates the user name

 */

	void fixName(string& newName)
	{
		int i;
		int savei;
		for ( i = 0; i < newName.length(); i++)
		{
			newName[i] = tolower(newName[i]); //turns all letters to lower case

			if (isblank(newName[i])) 
			{
			        savei = i+1; //turns first letter after space to capitlized
			}
		}
	 	   newName[savei] = toupper(newName[savei]);
	
		newName[0] = toupper(newName[0]); //sets first letter in string to capitlized
	}
	/* Function: setTemp
 *
 * Parameters: array and monthNumber
 *
 * Return: nothing
 *
 * Description: This function generates random temperatures based on what month it is and the number of days you want.

 */

	void setTemp(int temp[13][MAX_LENGTH], int monthNum)
	{
		cout << "Number of Days needed: ";
		int numDays;
		cin >> numDays;

		for (int r = 1; r < 13; r++) //for loop to generate temperatures based on specific months
		{
			do{

                        	if (numDays >= 15)
                       	        {
                               		 cout << "Enter New Value for Number of Days: "; //prompting for number of days user wants
                               		 cin >> numDays;
                       		 }
			} while (numDays >= 15);
			int sum = 0;

			for( int c = 0; c < numDays; c++) //for loop to randomly generate temperatures on request and to specific chart
			{
		        	if (r == 1)
				{
					temp[r][c] = rand() % 19 + 37;
				}
				else if (r == 2)
                                {
                                        temp[r][c] = rand() % 20 + 41;
                                }
				 else if (r == 3)
                                {
                                        temp[r][c] = rand() % 20 + 49;
                                }
				 else if (r == 4)
                                {
                                        temp[r][c] = rand() % 20 + 56;
                                }
				 else if (r == 5)
                                {
                                        temp[r][c] = rand() % 19 + 65;
                                }
				 else if (r == 6)
                                {
                                        temp[r][c] = rand() % 19 + 73;
                                }
				 else if (r == 7)
                                {
                                        temp[r][c] = rand() % 21 + 77;
                                }
				 else if (r == 8)
                                {
                                        temp[r][c] = rand() % 21 + 77;
                                }
				 else if (r == 9)
                                {
                                        temp[r][c] = rand() % 20 + 69;
                                }
				 else if (r == 10)
                                {
                                        temp[r][c] = rand() % 21 + 58;
                                }
				 else if (r == 11)
                                {
                                        temp[r][c] = rand() % 20 + 47;
                                }
				 else if (r == 12)
                                {
                                        temp[r][c] = rand() % 19 + 39;
                                }



			}
		}
		for (int r = 1; r < 13; r++) //loop in order to see which month and find sum
			for( int c = numDays; c < 15; c++)
			{
		        	if (r == 1)
				{
					temp[r][c] = 0;
				}
				else if (r == 2)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 3)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 4)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 5)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 6)
		         	{
					temp[r][c] = 0;
                                }
				 else if (r == 7)
				{
					temp[r][c] = 0;
			        }
				 else if (r == 8)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 9)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 10)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 11)
                                {
					temp[r][c] = 0;
                                }
				 else if (r == 12)
                                {
					temp[r][c] = 0;
                                }
			}
	}

/* Function: dispWeather()
 *
 * Parameters: none
 *
 * Return: none
 *
 * Description: finds difference between average temperatures of month and your current temp and says if it's hotter, normal, or cooler.

 */

	void dispWeather() //defining temp
	{
		int tempNum; //declaring tempNum as integer

		cout << "Today's Temperature: "; 
		cin >> tempNum; //input your current temp
		
		bool wantHours = false; //in order to receive month
		int month = getCurrentHours_OR_Month(wantHours); //calling fucntion 

		setTemp(temp, month); //calling function

		int ave_temp;
		int sum;
		int i;

		for (i = 1; i < 13; i++) //for loop to find sum of temperatures in month
			sum = 0;

			for (int j = 0; j < 15; j++)
			{
			   if ( temp[i][j] == 0 ) {
                             ave_temp = (sum / (j+ 1)) ;
			   } else {
                             sum = (sum + temp[i][j]);
			   }	   
			}
		

		int remainder = (tempNum - ave_temp); //to find difference
			
		if (remainder > 5) //in order to find output
		{
			cout << "Temperature is higher by more than 5 degrees compared to the average" << endl;
		}
		else if (remainder == 0)
		{
			cout << "Temperature is normal" << endl; 
		}
		else if (remainder < -5) 
		{
			 cout << "Temperature is less by more than 5 degrees compared to the average" << endl;
		}	
		
	}
/* Function: dispGreeting
 *
 * Parameters: userName
 *
 * Return: none
 *
 * Description: Takes time of user's username input to craft a greeting that differs on time of day. 

 */

	void dispGreeting(string userName)
	{
		bool wantHours = true; //in order to receive hours from getCurrentHours_OR_Month function
		int hours = getCurrentHours_OR_Month(wantHours ); //calling function
		fixName(userName); //calling function to fix name 

	        time_t rawtime;
                string time_str;
                rawtime = time(&rawtime);
                time_str = ctime(&rawtime);
	

                if (hours >= 0 && hours < 12 )		//  (12-11:59 am) is morning
		{                                               
                	 cout << "Good morning, " << userName << ". Have a nice day!" << endl << endl;
                }

                else if (hours >= 12 && hours < 18 ) 		//12-5:59 pm is afternoon time
		{                                                   
			cout << "Good afternoon, " << userName << ". Enjoy your afternoon!" << endl << endl;
                }

                else                                        //6-12 am is night time
	       	{  
       			cout << "Good evening, " << userName << ". Enjoy your evening!" << endl << endl;
                }
                       
       	}
/* Function: playGame
 *
 * Parameters: none
 *
 * Return: none
 *
 * Description: This function plays guessing game with user. Guessed number is randomly generated and it keeps count of how many times user guesses, if user guesses same number more than once, it does not count the guess. Up to 5 guesses only.

 */
	
	void playGame() //defining the function below
	{
		{
                        int chosenNum;                           //declaring the number the computer will choose as chosenNum
		       	chosenNum = (rand() % 20) + 1;          //setting range of numbers the computer can choose from
                        int guess;                               //this represents the user's guess
                        int numGuess = 1;                       //is equal to the number of guesses
			int sameNum = 0;

                        int arrayGuess[15];
			int count = 0; 

			cout << "You have three chances to guess my number from 1 to 20!" << endl << endl; //stating how many chances

                        do{
                                 cout << "Guess #" << numGuess  << ": ";              //Stating what guess user is on
                                cin >> guess;
		
    					for( int i = 0; i < 15; i++)
    					{
    						if (guess == arrayGuess[i]) //for loop keeps track of duplicate guesses
    						{	
    							cout << "You have guessed this already, choose a new number. Guess again" << endl;						
    							sameNum = 1;
    
    							break;
    						}
    
    
    					}
				arrayGuess[count++] = guess;

				if (sameNum == 0) //if there were no duplicate numbers
				{
    				arrayGuess[count++] = guess;
    				
                                    if (guess == chosenNum){ //guess is correct
                                    cout << "Congrats in " << numGuess << " guesses! Good job!" << endl << endl;
                                    }
                                    else if (guess > chosenNum) { //guess is more
                                    cout << "Uh oh, your guess (" << guess << ") is too high! Guess a lower number." << endl << endl;
                                    numGuess++;
                                    }
                                    else { //guess is too small
                                    cout << "Oh no! Your guess (" << guess << ") is too low! Guess a higher number." << endl << endl;
                                    numGuess++;
    
                                    }
				}
                        }while ((guess != chosenNum) && (numGuess < 6));             //condition statement for loop

                        if ((numGuess == 4) ){
                                cout << "Sorry, my number was " << chosenNum << "!" << endl << endl;
                        }
                        }
	}

